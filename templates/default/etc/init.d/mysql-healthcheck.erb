#!/bin/bash

###
# Generated by Chef for [<%= node[:fqdn] %>]
# Environment: <%= node.chef_environment %>
###

# MySQL healthcheck daemon start/stop script.

# Comments to support chkconfig on RedHat Linux
# chkconfig: 2345 64 36
# description: Checks mysql health

# Comments to support LSB init script conventions
### BEGIN INIT INFO
# Provides: <%= @name %>-healthcheck  
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop MySQL healthcheck
# Description: Checks mysql health
### END INIT INFO

#
# Use LSB init script functions for printing messages, if possible
#
export _SYSTEMCTL_SKIP_REDIRECT=1
lsb_functions="/lib/lsb/init-functions"
if test -f $lsb_functions ; then
  . $lsb_functions
else
  log_success_msg()
  {
    echo " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo " ERROR! $@"
  }
fi

PATH="/sbin:/usr/sbin:/bin:/usr/bin:$basedir/bin"
export PATH

case "$1" in
  'start')
    echo $echo_n "Starting MySQL healthcheck (<%= @name %>)"
    if test -x <%= @basedir %>/mysql_healthcheck.py
    then
      <%= @basedir %>/mysql_healthcheck.py start
      exit $?
    else
      log_failure_msg "Couldn't find MySQL healthcheck binary"
    fi
    ;;

  'stop')
    echo $echo_n "Stopping MySQL healthcheck (<%= @name %>)"
    if test -x <%= @basedir %>/mysql_healthcheck.py
    then
      <%= @basedir %>/mysql_healthcheck.py stop
      exit $?
    else
      log_failure_msg "Couldn't find MySQL healthcheck binary"
    fi
    ;;

  'restart')
    echo $echo_n "Restarting MySQL healthcheck (<%= @name %>)"
    if test -x <%= @basedir %>/mysql_healthcheck.py
    then
      <%= @basedir %>/mysql_healthcheck.py restart
      exit $?
    else
      log_failure_msg "Couldn't find MySQL healthcheck binary"
    fi
    ;;
    *)
      # usage
      basename=`basename "$0"`
      echo "Usage: $basename  {start|stop|restart}"
      exit 1
    ;;
esac

exit 0
