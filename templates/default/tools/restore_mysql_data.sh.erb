#!/bin/bash

###
# Generated by Chef for [<%= node[:fqdn] %>]
# Environment: <%= node.chef_environment %>
###

declare RET=0
declare LOCKED=0
declare DB=<%= @name %>
declare BASE=<%= @base %>
declare BACKUP_USER=<%= @backup_user %>
declare BACKUP_HOST=<%= @backup_host %>
declare BACKUP_PORT=<%= @backup_port %>
declare BACKUP_PATH=<%= @backup_path %>

ulimit -n 16000

function finish {
	if [ "$RET" -ne 0 ]; then
		/bin/touch /tmp/mysql-restore-<%= @port %>-failed
	else
		/bin/rm -f /tmp/mysql-restore-<%= @port %>-failed
	fi

	if [ "$LOCKED" -eq 1 ]; then
		rm -f $BASE/restore.lock
	fi
}
trap finish EXIT

function log {
	echo -e "[`date +'%Y.%m.%d %H:%M:%S'`] $@"
}

if [ -f "$BASE/restore.lock" ]; then
	log "Lockfile found. Another restore process is running!"
	RET=0
	exit 0
fi

echo "Are you sure you want to restore $DB?"
read -t 10 -p "Press 'y' to continue!" -s -n 1 answer
echo

if [ "$answer" != "y" ]; then
    exit 0
fi

touch $BASE/restore.lock
LOCKED=1

declare LASTBACKUP=$(/usr/bin/ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /opt/$DB/tools/backup_rsa $BACKUP_HOST -l $BACKUP_USER -p $BACKUP_PORT "tail -n1 $BACKUP_PATH/$DB.index 2>/dev/null")

if [ -z "$LASTBACKUP" ]; then
	log "No backup index found!"
	RET=1
	exit 1
fi


if [ -f "$BASE/restored" ] && [ "$LASTBACKUP" == "$(<$BASE/restored)" ]; then
	log "This backup is already restored"
	exit 0
fi

log "Stopping db instance $DB"
/etc/init.d/$DB stop

log "Purging old data from db instance $DB"
rm -rf $BASE/data/*
rm -rf $BASE/translog/*
rm -rf $BASE/relaylog/*
rm -rf $BASE/binlog/*

log "Retreiving data from backup server for $DB"
cd $BASE/data
if ! /usr/bin/ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -c arcfour -i $BASE/tools/backup_rsa $BACKUP_HOST -l $BACKUP_USER -p $BACKUP_PORT " cat $BACKUP_PATH/$LASTBACKUP" | pigz -d | tar -xvif -; then 
	log "Cannot retreive backup!"
	RET=1
	exit 1
fi

log "Restoring database $DB"
if ! innobackupex --use-memory=4G --safe-slave-backup --slave-info --defaults-file=$BASE/etc/my.cnf --defaults-group=server --apply-log .; then
	log "Cannot apply logs!"
	RET=1
	exit 1
fi

mv ib_logfile* ../translog
rm xtrabackup_logfile
cd ..
chown -R mysql:mysql data binlog translog relaylog

echo $LASTBACKUP > $BASE/restored

log "Starting db instance $DB"
/etc/init.d/$DB start
if [ "$?" -ne 0 ]; then 
	log "Cannot start $DB instance!"
	RET=1
	exit 1
fi

log "Backup successfuly restored"
